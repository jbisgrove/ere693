# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# FindStreams.py
# Created on: 2016-03-08 12:26:53.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: FindStreams <DEM> <AnalysisMask> <StreamsV> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy
from arcpy import env
workspace = "J:\\ESF\\Classes\\ERE693\\Lab06\\Lab06Data.gdb\\"
# Script arguments
DEM = arcpy.GetParameter(0)
if DEM == '#' or not DEM:
    DEM = workspace+"DEM" # provide a default value if unspecified

AnalysisMask = arcpy.GetParameter(1)
if AnalysisMask == '#' or not AnalysisMask:
    AnalysisMask = workspace+"AnalysisMask" # provide a default value if unspecified
cutoff = arcpy.GetParameter(2)
if cutoff=='#' or not cutoff:
	cutoff = 5
StreamsV = arcpy.GetParameter(3)
if StreamsV == '#' or not StreamsV:
    StreamsV = workspace+"StreamsV" # provide a default value if unspecified

# Local variables:
#workspace = 'J:\\ESF\\Classes\\ERE693\\Lab06\\Lab06Data.gdb\\'
env.workspace = workspace
env.overwriteOutput = True
DEM_filled = workspace+"DEM_filled"
AnalysisMaskRaster = workspace+"AnalysisMaskRaster"
FlowDrop = workspace+"FlowDrop"
FlowDirection = workspace+"FlowDirection"
FlowAccumulation = workspace+"FlowAccumulation"
flowAccumulationAcres = workspace+"flowAccumulationAcres"
Streams = workspace+"Streams"

# Set Geoprocessing environments
arcpy.env.snapRaster = DEM_filled

# Process: Fill
arcpy.gp.Fill_sa(DEM, DEM_filled, "")

# Process: Polygon to Raster
arcpy.PolygonToRaster_conversion(AnalysisMask, "OBJECTID", AnalysisMaskRaster, "CELL_CENTER", "NONE", "40")

# Process: Flow Direction
tempEnvironment0 = arcpy.env.mask
arcpy.env.mask = workspace+"AnalysisMaskRaster"
arcpy.gp.FlowDirection_sa(DEM_filled, FlowDirection, "FORCE", FlowDrop)
arcpy.env.mask = tempEnvironment0

# Process: Flow Accumulation
arcpy.gp.FlowAccumulation_sa(FlowDirection, FlowAccumulation, "", "INTEGER")

# Process: Raster Calculator
tempEnvironment0 = arcpy.env.rasterStatistics
arcpy.env.rasterStatistics = "STATISTICS 1 1"
#arcpy.gp.RasterCalculator_sa('"%FlowAccumulation%" * 0.036731', flowAccumulationAcres)
inRaster = arcpy.Raster(FlowAccumulation)
outRaster = arcpy.sa.Times(inRaster,0.036731)
outRaster.save(flowAccumulationAcres)

arcpy.env.rasterStatistics = tempEnvironment0

# Process: Reclassify
arcpy.gp.Reclassify_sa(flowAccumulationAcres, "Value", "0 "+str(cutoff)+" NODATA;"+str(cutoff)+" 2000000 1", Streams, "DATA")

# Process: Raster to Polyline
arcpy.RasterToPolyline_conversion(Streams, StreamsV, "NODATA", "0", "NO_SIMPLIFY", "Value")

